# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src
    
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep -oP '(?<=<Version>)[^<]+' Watson.csproj)
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        working-directory: src/Watson
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Publish
        run: dotnet publish --configuration Release --output ./output
      - name: Debug - List files
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of src/:"
          ls -l ./
      - name: Zip release
        run: zip -r Watson.${{ env.VERSION }}.zip ./output
      - name: Debug - Check if zip file exists
        run: |
          echo "Checking if Watson.${{ env.VERSION }}.zip exists..."
          ls -l Watson.${{ env.VERSION }}.zip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: watson-zip
          path: Watson.${{ env.VERSION }}.zip
  #      - name: Package
  #        run: dotnet pack --configuration Release
  #      - name: Publish
  #        run: dotnet nuget push Watson.$VERSION.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: watson-zip
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: Watson.${{ needs.build.outputs.version }}.zip