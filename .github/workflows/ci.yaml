name: CI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        runtime: [ 'win-x64', 'linux-x64' ]
        include:
          - runtime: win-x64
          - runtime: linux-x64

    defaults:
      run:
        working-directory: src
    
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Get version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          VERSION=${LATEST_TAG#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        working-directory: src/Watson
      - name: Update csproj version
        run: |
          sed -i "s|<Version>.*</Version>|<Version>${{ env.VERSION }}</Version>|g" Watson/Watson.csproj
          sed -i "s|<FileVersion>.*</FileVersion>|<FileVersion>${{ env.VERSION }}</FileVersion>|g" Watson/Watson.csproj
          sed -i "s|<PackageVersion>.*</PackageVersion>|<PackageVersion>${{ env.VERSION }}</PackageVersion>|g" Watson/Watson.csproj
      - name: Restore dependencies for tests
        run: dotnet restore
      - name: Build for tests
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: src/Watson
      - name: Restore dependencies for release
        run: dotnet restore Watson/Watson.csproj
      - name: Publish release
        run: dotnet publish Watson/Watson.csproj --configuration Release --output ./output --self-contained false --runtime ${{ matrix.runtime }}
      - name: Zip release
        run: cd ./output && zip -r Watson.${{ env.VERSION }}-${{ matrix.runtime }}.zip .
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: watson-zip-${{ matrix.runtime }}
          path: ./src/output/Watson.${{ env.VERSION }}-${{ matrix.runtime }}.zip
      - name: Build release for nuget
        run: dotnet build Watson/Watson.csproj --configuration Release
      - name: Package release for nuget
        run: dotnet pack Watson/Watson.csproj --configuration Release --output ./nupkgs-${{ matrix.runtime }}

  github_release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download win-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: watson-zip-win-x64
          path: .

      - name: Download linux-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: watson-zip-linux-x64
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files:
            - Watson.${{ needs.build.outputs.version }}-win-x64.zip
            - Watson.${{ needs.build.outputs.version }}-linux-x64.zip
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Release noters for ${{ github.ref_name }}
  
  nuget_publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      # Only publish the windows build
      - name: Download win-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: watson-zip-win-x64
          path: .

      - name: Publish Nuget
        run: dotnet nuget push ./nupkgs-win-x64/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json