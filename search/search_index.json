{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Watson is a simple terminal based time tracking application highly inspired by td-watson.</p> <p></p> <p>See the Get started page to get started with <code>watson</code>.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>\ufeff\u200e</p>"},{"location":"changelog/#v0164","title":"v0.1.64","text":"<p>New features</p> <ul> <li>#111 - Add \"yesterday\", \"last-week\" and positional \"day\" options to the <code>log</code> command</li> </ul> <p>Bug fixes</p> <ul> <li>#114 - FIX: <code>version</code> and <code>help</code> command/options not working</li> <li>#113 - FIX: options not getting parsed</li> </ul> <p>Full Changelog</p> <p>\ufeff\u200e</p>"},{"location":"changelog/#v0163","title":"v0.1.63","text":"<p>New features</p> <ul> <li>Add <code>github</code> command</li> <li>Add <code>bug</code> command</li> <li>Add <code>wiki</code> command</li> </ul> <p>Full Changelog</p> <p>\ufeff\u200e</p>"},{"location":"changelog/#v0162","title":"v0.1.62","text":"<p>New features</p> <ul> <li>Add <code>alias</code> command</li> </ul> <p>Full Changelog</p> <p>\ufeff\u200e</p>"},{"location":"changelog/#v0161","title":"v0.1.61","text":"<p>New features</p> <ul> <li>Add terminal completion for<ul> <li>powershell</li> <li>zsh</li> <li>bash</li> </ul> </li> </ul> <p>Full Changelog</p> <p>\ufeff\u200e</p>"},{"location":"changelog/#v0160","title":"v0.1.60","text":"<ul> <li>Refactor some internal logic to simplify testing</li> </ul> <p>Full Changelog</p>"},{"location":"commands/","title":"Commands","text":"<p>\ufeff\u200e</p>"},{"location":"commands/#add","title":"add","text":"<pre><code>watson add [project] [tag1] [tag2] ... [options]\n</code></pre> <p>Add a new frame for the specified project and tag(s) at the specified time*.</p> <p>If no time is specified, the current time is used.*"},{"location":"commands/#options","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code>"},{"location":"commands/#example","title":"Example","text":"<pre><code>watson add cookin pizza hawaiian --from \"2025-01-01 14:45\"\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#alias","title":"alias","text":"<pre><code>watson alias [action] [arguments]\n</code></pre> <p>Set or creation an alias for a command.</p>"},{"location":"commands/#examples","title":"Examples","text":"<pre><code>watson alias create mystatus status\nwatson alias mystatus status // shorthand for the above command\nwatson mystatus\nwatson alias remove mystatus\n\nwatson alias myalias start project1 tag1\nwatson myalias tag2 --from 8:45\n# the above command is equivalent to:\nwatson start project1 tag1 tag2 --from 8:45\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#bug","title":"bug","text":"<pre><code>watson bug\n</code></pre> <p>Open the GitHub issue page, ready to submit a bug report.</p> <p>\ufeff\u200e</p>"},{"location":"commands/#cancel","title":"cancel","text":"<pre><code>watson cancel\n</code></pre> <p>Cancel the currently running frame.</p> <p>\ufeff\u200e</p>"},{"location":"commands/#config","title":"config","text":"<pre><code>watson config [action] [key] [value]\n</code></pre> <p>Get or set a settings value.</p>"},{"location":"commands/#examples_1","title":"Examples","text":"<pre><code>watson config get workTime.endTime\nwatson config set workTime.endTime 9:15\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#edit","title":"edit","text":"<pre><code>watson edit [project] [tag1] [tag2] ... [options]\n</code></pre> <p>Edit an existing frame*.</p> <p>If frame ID is specified, the currently running frame, if any, is used.*"},{"location":"commands/#options_1","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-i, --id</code> The ID of the frame to edit. <code>--id 02af5e</code>"},{"location":"commands/#example_1","title":"Example","text":"<pre><code>watson edit watching-tv avengers --id 02af5e --from \"2025-01-01 14:45\"\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#github","title":"github","text":"<pre><code>watson github\n</code></pre> <p>Open the GitHub repository of the application.</p> <p>\ufeff\u200e</p>"},{"location":"commands/#log","title":"log","text":"<pre><code>watson log [options]\n</code></pre> <p>Display the frames within the specified time range and meeting the specified criteria. The default behavior of the <code>log</code> if you don't specify any options is to show the frames of today. (<code>watson log -d 0</code>)</p>"},{"location":"commands/#options_2","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code> <code>-p, --project</code> Show only frames of those projects. <code>--project cooking</code> <code>-t, --tag</code> Show only the frames having those tags. <code>--tag pizza</code> <code>-a, --all</code> Show all frames. <code>--all</code> <code>-d, --day</code> Show the frames of today or specified day. <code>--day</code>, <code>--day 3</code> <code>-y, --yesterday</code> Show the frames of yesterday. <code>--yesterday</code> <code>-w, --week</code> Show the frames of this week. <code>--week</code> <code>-m, --month</code> Show the frames of this month. <code>--month</code> <code>-q, --year</code> Show the frames of this year. <code>--year</code> <code>-r, --reverse</code> Show the frames in reverse order. <code>--reverse</code> <code>-i, --ignore-project</code> Ignore frames of those projects. <code>--ignore-project cooking</code> <code>-g, --ignore-tag</code> Ignore frames having those tags. <code>--ignore-tag pizza</code>"},{"location":"commands/#examples_2","title":"Examples","text":"<pre><code>watson log -d\nwatson log -d 3 # show the frames of 3 days ago\nwatson log --from \"2025-01-01 14:45\" --to \"2025-01-01 14:45\"\nwatson log --from 14:15\nwatson log -w --project cooking --ignore-tag pizza\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#project","title":"project","text":"<pre><code>watson project [action] [arguments] [options]\n</code></pre> <p>Perform actions on projects, such as</p> <ul> <li>Create a project</li> <li>Remove a project</li> <li>List projects</li> <li>Rename a project</li> </ul>"},{"location":"commands/#actions","title":"Actions","text":"Action Description add Create a project remove Remove a project list List projects rename Rename a project"},{"location":"commands/#examples_3","title":"Examples","text":"<pre><code>watson project add cooking\nwatson project remove 82af5e\nwatson project list\nwatson project rename 82af5e eating\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#remove","title":"remove","text":"<pre><code>watson remove [id]\n</code></pre> <p>Remove the frame with the specified ID.</p>"},{"location":"commands/#examples_4","title":"Examples","text":"<pre><code>watson remove 02af5e\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#restart","title":"restart","text":"<pre><code>watson restart [id (optional)]\n</code></pre> <p>Restart the specified frame with the same project and tags. If no ID is specified, the latest stopped frame is restarted, if any.</p>"},{"location":"commands/#examples_5","title":"Examples","text":"<pre><code>watson restart\nwatson restart 02af5e\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#start","title":"start","text":"<pre><code>watson start [project] [tag1] [tag2] ...\n</code></pre> <p>Start a new frame for the specified project and tag(s).</p>"},{"location":"commands/#examples_6","title":"Examples","text":"<pre><code>watson start watching-tv\nwatson start cooking pizza hawaiian\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#stats-work-in-progress","title":"stats (work in progress)","text":"<pre><code>watson stats [type] [options]\n</code></pre> <p>Display various statistics.</p> <p>Types possible :</p> <ul> <li>projects</li> </ul>"},{"location":"commands/#options_3","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code> <code>-p, --project</code> Show only frames of those projects. <code>--project cooking</code> <code>-t, --tag</code> Show only the frames having those tags. <code>--tag pizza</code> <code>-a, --all</code> Show all frames. <code>--all</code> <code>-d, --day</code> Show the frames of today. <code>--day</code> <code>-w, --week</code> Show the frames of this week. <code>--week</code> <code>-m, --month</code> Show the frames of this month. <code>--month</code> <code>-y, --year</code> Show the frames of this year. <code>--year</code> <code>-r, --reverse</code> Show the frames in reverse order. <code>--reverse</code> <code>-i, --ignore-project</code> Ignore frames of those projects. <code>--ignore-project cooking</code> <code>-g, --ignore-tag</code> Ignore frames having those tags. <code>--ignore-tag pizza</code>"},{"location":"commands/#examples_7","title":"Examples","text":"<pre><code>watson stats projects -d\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#status","title":"status","text":"<pre><code>watson status\n</code></pre> <p>Display the status of the currently running frame.</p>"},{"location":"commands/#examples_8","title":"Examples","text":"<pre><code>watson status\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#stop","title":"stop","text":"<pre><code>watson stop [options]\n</code></pre> <p>Stop the currently running frame.</p>"},{"location":"commands/#options_4","title":"Options","text":"Option Description Example <code>-a, --at</code> Stop the frame at the specified time. <code>--at \"2025-01-01 14:45\"</code>"},{"location":"commands/#examples_9","title":"Examples","text":"<p>``shell watson stop watson stop --at \"2025-01-01 14:45\"</p> <pre><code>\ufeff\u200e\n\n## tag\n\n```shell\nwatson tag [action] [arguments] [options]\n</code></pre> <p>Perform actions on tags, such as</p> <ul> <li>Create a tag</li> <li>Remove a tag</li> <li>List tags</li> <li>Rename a tag</li> </ul>"},{"location":"commands/#actions_1","title":"Actions","text":"Action Description add Create a tag remove Remove a tag list List tags rename Rename a tag"},{"location":"commands/#examples_10","title":"Examples","text":"<pre><code>watson tag add pizza\nwatson tag remove 02af5e\nwatson tag list\nwatson tag rename 02af5e burger\n</code></pre> <p>\ufeff\u200e</p>"},{"location":"commands/#wiki","title":"wiki","text":"<pre><code>watson wiki\n</code></pre> <p>Open the wiki website of the application.</p> <p>\ufeff\u200e</p>"},{"location":"commands/#workhours","title":"workhours","text":"<pre><code>watson workhours [start|end|reset] [time]\n</code></pre> <p>Get or set custom work hours for the current day. If <code>reset</code> is passed, the work hours are reset to the default values.</p>"},{"location":"commands/#examples_11","title":"Examples","text":"<pre><code>watson workhours start 9:15\nwatson workhours end 17:15\nwatson workhours reset\n</code></pre>"},{"location":"faq/","title":"FAQ","text":"<p>\ufeff\u200e</p>"},{"location":"faq/#what-is-a-frame","title":"What is a frame?","text":"<p>It's a task or an activity. Basically what you're working on. Usually it's a simple name, like <code>cooking</code> or 'project-abc'. You can also add as many <code>tags</code> as you want to describe the <code>frame</code>.</p> <p>For example, if you're cooking a pizza, you could say <code>watson start cooking pizza</code>. The project is <code>cooking</code> the tag is <code>pizza</code>.</p> <p>Tags can help you find frames related to specific tasks within a project.</p> <p>\ufeff\u200e</p>"},{"location":"faq/#is-the-application-using-12h-or-24h-time","title":"Is the application using 12h or 24h time?","text":"<p>The application uses 24h time. It's much easier to work with and remove the ambiguity of 12h time.</p> <p>\ufeff\u200e</p>"},{"location":"faq/#do-i-need-to-create-a-special-project-for-lunchtime","title":"Do I need to create a special project for lunchtime?","text":"<p>No, you can specify your lunch time in the settings of the application. By default, it's set to <code>12:00</code> to <code>13:00</code>.</p> <p>\ufeff\u200e</p>"},{"location":"faq/#where-are-the-application-data-stored","title":"Where are the application data stored?","text":"<p>All the data of the application is stored in a folder called <code>.watson</code> in your home directory.</p> <ul> <li>On Windows, it's <code>C:\\Users\\&lt;username&gt;\\.watson</code></li> <li>On Linux and macOS, it's <code>~/.watson</code></li> <li>On macOS, it's <code>/Users/&lt;username&gt;/.watson</code></li> </ul> <p>The directory contains several elements :</p> <ul> <li>The <code>logs</code> directory contains the logs of the application</li> <li>The <code>settings.json</code> file contains the settings of the application (which you can also edit through the application)</li> <li>The database file <code>data.db</code> which contains the frames, projects, tags, etc.</li> </ul> <p>\ufeff\u200e</p>"},{"location":"faq/#how-does-time-input-works","title":"How does time input works?","text":"<p>There are several parsing rules available to speed up the time input process, so you don't have to type the date time. Of course, you can always type the full date time manually if you want to, but here are some shortcuts to save up some time.</p> <ul> <li>1-2 digits means <code>hour</code>. For example<ul> <li><code>3</code> means <code>03:00</code></li> <li><code>13</code> means <code>13:00</code></li> <li><code>88</code> means <code>08:08</code></li> </ul> </li> <li>3-4 digits means <code>hour:minute</code>. For example<ul> <li><code>1234</code> means <code>12:34</code></li> <li><code>845</code> means <code>08:45</code></li> <li><code>138</code> means <code>13:08</code></li> </ul> </li> <li>2 sets of digits means <code>day hour</code>. For example<ul> <li><code>13 14</code> means <code>13th</code> of the current month at <code>14:00</code></li> <li><code>3 1245</code> means <code>3rd</code> of the current month at <code>12:45</code></li> </ul> </li> <li>hyphen separated digits means <code>year-month-day</code>. For example<ul> <li><code>3-13</code> means <code>March 13th</code> of the current year</li> <li><code>10-23 852</code> means <code>October 23rd</code> of the current year at <code>08:52</code></li> <li><code>2023-4-13 14</code> means <code>April 13th</code> of <code>2023</code> at <code>14:00</code></li> </ul> </li> </ul> <p>\ufeff\u200e</p>"},{"location":"faq/#how-does-a-frame-start-time-and-end-time-work","title":"How does a frame start time and end time work?","text":"<p>A frame is actually simply a point in time. It only stores the time at which it was created. That means that the end time of a frame is technically the start time of \"next thing\" that comes after it. This design removes the tedious task of having to perfectly mix and match the start and end time of tasks.</p> <p>For example, you're working on something, then your boss calls you for something else at 9:13 for 2 minutes, then you go back on your project, but then a coworker calls you for something 4 minutes later. After all of that, you realized you forgot to add your tasks in the application. If you'd need to manage end times, that will probably look like this :</p> <ul> <li>Add a task \"call with the boss\" from 9:13 to 9:15</li> <li>Add a task \"work on project\" from 9:15 to 9:20</li> <li>Add a task \"call with the coworker\" from 9:20 to 9:24</li> <li>Add a task \"work on project\" from 9:24 to now</li> </ul> <p>Kind of tedious, isn't it?</p> <p>Now, what if you only need to remember the start time, it's much easier :</p> <ul> <li>Add a task \"call with the boss\" at 9:13</li> <li>Add a task \"work on project\" at 9:15</li> <li>Add a task \"call with the coworker\" at 9:20</li> <li>Add a task \"work on project\" at 9:24</li> </ul> <p>And all frames are gonna adjust automatically, no more \"when did it end? how long was the call? etc.\"!</p> <p>But, how does it knows when the day ends? Well, there are settings for that. You can set your work hours in the settings of the application. By default, it's set to <code>8:00</code> to <code>16:00</code>.</p> <p>\ufeff\u200e</p>"},{"location":"faq/#how-can-i-enable-completion","title":"How can I enable completion?","text":"<p>The application supports completion for the following terminals :</p> <p>powershell</p> <pre><code>Set-ExecutionPolicy Bypass -Scope Process -Force; $script = irm \"https://raw.githubusercontent.com/nomis51/watson/master/completion/powershell.ps1\"; iex $script; $script | Out-File -Append $PROFILE\n</code></pre> <p>bash</p> <pre><code>bash -c 'curl -sL \"https://raw.githubusercontent.com/nomis51/watson/master/completion/bash.sh\" | tee -a ~/.bashrc | bash'\n</code></pre> <p>zsh</p> <pre><code>zsh -c 'curl -sL \"https://raw.githubusercontent.com/nomis51/watson/master/completion/zsh.sh\" | tee -a ~/.zshrc | zsh'\n</code></pre>"},{"location":"get-started/","title":"Get started","text":""},{"location":"get-started/#requirements","title":"Requirements","text":"<ul> <li>.NET 8.0 or higher</li> </ul>"},{"location":"get-started/#installation","title":"Installation","text":""},{"location":"get-started/#using-dotnet-easiest","title":"Using dotnet (easiest)","text":"<pre><code>dotnet tool install --global nomis51.watson\n</code></pre>"},{"location":"get-started/#standalone","title":"Standalone","text":"<ul> <li>Go to the Release page</li> <li>Download the latest zip file for your platform</li> <li>Extract</li> <li>Run <code>Watson.exe</code></li> </ul>"},{"location":"get-started/#usage","title":"Usage","text":"<p>When you want to track a task or an activity, you create a new <code>frame</code> with the following command :</p> <pre><code>watson start cooking pizza\n</code></pre> <p>Each <code>frame</code> need a <code>project</code>. You can also add as many <code>tags</code> as you want to describe the <code>frame</code>. In the example above, we have the project <code>cooking</code> with the tag <code>pizza</code>. So we're basically \"cooking a pizza\" in that frame.</p> <p>When you're ready for another task or activity, you can <code>start</code> another <code>frame</code>. You can also <code>stop</code> the current <code>frame</code> at any time.</p> <p>You can display the <code>status</code> of the current <code>frame</code> with the <code>status</code> command.</p> <p>And you can also list of all the <code>frames</code> within a time period with the <code>log</code> command.</p> <p></p> <p>For more details about all the available commands and options run <code>watson help</code> or visit the commands page.</p>"},{"location":"get-started/#completion","title":"Completion","text":"<p>The application supports completion for the following terminals :</p> <ul> <li>powershell</li> <li>bash</li> <li>zsh</li> </ul> <p>For more details on how to enable completion, see the completion page.</p>"},{"location":"fragments/changelog/v0.1.60/","title":"V0.1.60","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.60/#v0160","title":"v0.1.60","text":"<ul> <li>Refactor some internal logic to simplify testing</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.61/","title":"V0.1.61","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.61/#v0161","title":"v0.1.61","text":"<p>New features</p> <ul> <li>Add terminal completion for<ul> <li>powershell</li> <li>zsh</li> <li>bash</li> </ul> </li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.62/","title":"V0.1.62","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.62/#v0162","title":"v0.1.62","text":"<p>New features</p> <ul> <li>Add <code>alias</code> command</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.63/","title":"V0.1.63","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.63/#v0163","title":"v0.1.63","text":"<p>New features</p> <ul> <li>Add <code>github</code> command</li> <li>Add <code>bug</code> command</li> <li>Add <code>wiki</code> command</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.64/","title":"V0.1.64","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.64/#v0164","title":"v0.1.64","text":"<p>New features</p> <ul> <li>#111 - Add \"yesterday\", \"last-week\" and positional \"day\" options to the <code>log</code> command</li> </ul> <p>Bug fixes</p> <ul> <li>#114 - FIX: <code>version</code> and <code>help</code> command/options not working</li> <li>#113 - FIX: options not getting parsed</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.65/","title":"V0.1.65","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.65/#v0165","title":"v0.1.65","text":"<p>New features</p> <ul> <li>#112 - Adjust work time start time to frame time if outside of work hours</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.66/","title":"V0.1.66","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.66/#v0166","title":"v0.1.66","text":"<p>Changes</p> <ul> <li>Minor optimizations</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/changelog/v0.1.67/","title":"V0.1.67","text":"<p>\u200e</p>"},{"location":"fragments/changelog/v0.1.67/#v0167","title":"v0.1.67","text":"<p>Changes</p> <ul> <li>Remove todo command</li> </ul> <p>Full Changelog</p>"},{"location":"fragments/commands/add/","title":"Add","text":"<p>\u200e</p>"},{"location":"fragments/commands/add/#add","title":"add","text":"<pre><code>watson add [project] [tag1] [tag2] ... [options]\n</code></pre> <p>Add a new frame for the specified project and tag(s) at the specified time*.</p> <p>If no time is specified, the current time is used.*"},{"location":"fragments/commands/add/#options","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code>"},{"location":"fragments/commands/add/#example","title":"Example","text":"<pre><code>watson add cookin pizza hawaiian --from \"2025-01-01 14:45\"\n</code></pre>"},{"location":"fragments/commands/alias/","title":"Alias","text":"<p>\u200e</p>"},{"location":"fragments/commands/alias/#alias","title":"alias","text":"<pre><code>watson alias [action] [arguments]\n</code></pre> <p>Set or creation an alias for a command.</p>"},{"location":"fragments/commands/alias/#examples","title":"Examples","text":"<pre><code>watson alias create mystatus status\nwatson alias mystatus status // shorthand for the above command\nwatson mystatus\nwatson alias remove mystatus\n\nwatson alias myalias start project1 tag1\nwatson myalias tag2 --from 8:45\n# the above command is equivalent to:\nwatson start project1 tag1 tag2 --from 8:45\n</code></pre>"},{"location":"fragments/commands/bug/","title":"Bug","text":"<p>\u200e</p>"},{"location":"fragments/commands/bug/#bug","title":"bug","text":"<pre><code>watson bug\n</code></pre> <p>Open the GitHub issue page, ready to submit a bug report.</p>"},{"location":"fragments/commands/cancel/","title":"Cancel","text":"<p>\u200e</p>"},{"location":"fragments/commands/cancel/#cancel","title":"cancel","text":"<pre><code>watson cancel\n</code></pre> <p>Cancel the currently running frame.</p>"},{"location":"fragments/commands/config/","title":"Config","text":"<p>\u200e</p>"},{"location":"fragments/commands/config/#config","title":"config","text":"<pre><code>watson config [action] [key] [value]\n</code></pre> <p>Get or set a settings value.</p>"},{"location":"fragments/commands/config/#examples","title":"Examples","text":"<pre><code>watson config get workTime.endTime\nwatson config set workTime.endTime 9:15\n</code></pre>"},{"location":"fragments/commands/edit/","title":"Edit","text":"<p>\u200e</p>"},{"location":"fragments/commands/edit/#edit","title":"edit","text":"<pre><code>watson edit [project] [tag1] [tag2] ... [options]\n</code></pre> <p>Edit an existing frame*.</p> <p>If frame ID is specified, the currently running frame, if any, is used.*"},{"location":"fragments/commands/edit/#options","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-i, --id</code> The ID of the frame to edit. <code>--id 02af5e</code>"},{"location":"fragments/commands/edit/#example","title":"Example","text":"<pre><code>watson edit watching-tv avengers --id 02af5e --from \"2025-01-01 14:45\"\n</code></pre>"},{"location":"fragments/commands/github/","title":"Github","text":"<p>\u200e</p>"},{"location":"fragments/commands/github/#github","title":"github","text":"<pre><code>watson github\n</code></pre> <p>Open the GitHub repository of the application.</p>"},{"location":"fragments/commands/log/","title":"Log","text":"<p>\u200e</p>"},{"location":"fragments/commands/log/#log","title":"log","text":"<pre><code>watson log [options]\n</code></pre> <p>Display the frames within the specified time range and meeting the specified criteria. The default behavior of the <code>log</code> if you don't specify any options is to show the frames of today. (<code>watson log -d 0</code>)</p>"},{"location":"fragments/commands/log/#options","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code> <code>-p, --project</code> Show only frames of those projects. <code>--project cooking</code> <code>-t, --tag</code> Show only the frames having those tags. <code>--tag pizza</code> <code>-a, --all</code> Show all frames. <code>--all</code> <code>-d, --day</code> Show the frames of today or specified day. <code>--day</code>, <code>--day 3</code> <code>-y, --yesterday</code> Show the frames of yesterday. <code>--yesterday</code> <code>-w, --week</code> Show the frames of this week. <code>--week</code> <code>-m, --month</code> Show the frames of this month. <code>--month</code> <code>-q, --year</code> Show the frames of this year. <code>--year</code> <code>-r, --reverse</code> Show the frames in reverse order. <code>--reverse</code> <code>-i, --ignore-project</code> Ignore frames of those projects. <code>--ignore-project cooking</code> <code>-g, --ignore-tag</code> Ignore frames having those tags. <code>--ignore-tag pizza</code>"},{"location":"fragments/commands/log/#examples","title":"Examples","text":"<pre><code>watson log -d\nwatson log -d 3 # show the frames of 3 days ago\nwatson log --from \"2025-01-01 14:45\" --to \"2025-01-01 14:45\"\nwatson log --from 14:15\nwatson log -w --project cooking --ignore-tag pizza\n</code></pre>"},{"location":"fragments/commands/project/","title":"Project","text":"<p>\u200e</p>"},{"location":"fragments/commands/project/#project","title":"project","text":"<pre><code>watson project [action] [arguments] [options]\n</code></pre> <p>Perform actions on projects, such as</p> <ul> <li>Create a project</li> <li>Remove a project</li> <li>List projects</li> <li>Rename a project</li> </ul>"},{"location":"fragments/commands/project/#actions","title":"Actions","text":"Action Description add Create a project remove Remove a project list List projects rename Rename a project"},{"location":"fragments/commands/project/#examples","title":"Examples","text":"<pre><code>watson project add cooking\nwatson project remove 82af5e\nwatson project list\nwatson project rename 82af5e eating\n</code></pre>"},{"location":"fragments/commands/remove/","title":"Remove","text":"<p>\u200e</p>"},{"location":"fragments/commands/remove/#remove","title":"remove","text":"<pre><code>watson remove [id]\n</code></pre> <p>Remove the frame with the specified ID.</p>"},{"location":"fragments/commands/remove/#examples","title":"Examples","text":"<pre><code>watson remove 02af5e\n</code></pre>"},{"location":"fragments/commands/restart/","title":"Restart","text":"<p>\u200e</p>"},{"location":"fragments/commands/restart/#restart","title":"restart","text":"<pre><code>watson restart [id (optional)]\n</code></pre> <p>Restart the specified frame with the same project and tags. If no ID is specified, the latest stopped frame is restarted, if any.</p>"},{"location":"fragments/commands/restart/#examples","title":"Examples","text":"<pre><code>watson restart\nwatson restart 02af5e\n</code></pre>"},{"location":"fragments/commands/start/","title":"Start","text":"<p>\u200e</p>"},{"location":"fragments/commands/start/#start","title":"start","text":"<pre><code>watson start [project] [tag1] [tag2] ...\n</code></pre> <p>Start a new frame for the specified project and tag(s).</p>"},{"location":"fragments/commands/start/#examples","title":"Examples","text":"<pre><code>watson start watching-tv\nwatson start cooking pizza hawaiian\n</code></pre>"},{"location":"fragments/commands/stats/","title":"Stats","text":"<p>\u200e</p>"},{"location":"fragments/commands/stats/#stats-work-in-progress","title":"stats (work in progress)","text":"<pre><code>watson stats [type] [options]\n</code></pre> <p>Display various statistics.</p> <p>Types possible :</p> <ul> <li>projects</li> </ul>"},{"location":"fragments/commands/stats/#options","title":"Options","text":"Option Description Example <code>-f, --from</code> The start time of the frame. <code>--from \"2025-01-01 14:45\"</code> <code>-t, --to</code> The end time of the frame. <code>--to \"2025-01-01 14:45\"</code> <code>-p, --project</code> Show only frames of those projects. <code>--project cooking</code> <code>-t, --tag</code> Show only the frames having those tags. <code>--tag pizza</code> <code>-a, --all</code> Show all frames. <code>--all</code> <code>-d, --day</code> Show the frames of today. <code>--day</code> <code>-w, --week</code> Show the frames of this week. <code>--week</code> <code>-m, --month</code> Show the frames of this month. <code>--month</code> <code>-y, --year</code> Show the frames of this year. <code>--year</code> <code>-r, --reverse</code> Show the frames in reverse order. <code>--reverse</code> <code>-i, --ignore-project</code> Ignore frames of those projects. <code>--ignore-project cooking</code> <code>-g, --ignore-tag</code> Ignore frames having those tags. <code>--ignore-tag pizza</code>"},{"location":"fragments/commands/stats/#examples","title":"Examples","text":"<pre><code>watson stats projects -d\n</code></pre>"},{"location":"fragments/commands/status/","title":"Status","text":"<p>\u200e</p>"},{"location":"fragments/commands/status/#status","title":"status","text":"<pre><code>watson status\n</code></pre> <p>Display the status of the currently running frame.</p>"},{"location":"fragments/commands/status/#examples","title":"Examples","text":"<pre><code>watson status\n</code></pre>"},{"location":"fragments/commands/stop/","title":"Stop","text":"<p>\u200e</p>"},{"location":"fragments/commands/stop/#stop","title":"stop","text":"<pre><code>watson stop [options]\n</code></pre> <p>Stop the currently running frame.</p>"},{"location":"fragments/commands/stop/#options","title":"Options","text":"Option Description Example <code>-a, --at</code> Stop the frame at the specified time. <code>--at \"2025-01-01 14:45\"</code>"},{"location":"fragments/commands/stop/#examples","title":"Examples","text":"<p>``shell watson stop watson stop --at \"2025-01-01 14:45\"</p> <p>```</p>"},{"location":"fragments/commands/tag/","title":"Tag","text":"<p>\u200e</p>"},{"location":"fragments/commands/tag/#tag","title":"tag","text":"<pre><code>watson tag [action] [arguments] [options]\n</code></pre> <p>Perform actions on tags, such as</p> <ul> <li>Create a tag</li> <li>Remove a tag</li> <li>List tags</li> <li>Rename a tag</li> </ul>"},{"location":"fragments/commands/tag/#actions","title":"Actions","text":"Action Description add Create a tag remove Remove a tag list List tags rename Rename a tag"},{"location":"fragments/commands/tag/#examples","title":"Examples","text":"<pre><code>watson tag add pizza\nwatson tag remove 02af5e\nwatson tag list\nwatson tag rename 02af5e burger\n</code></pre>"},{"location":"fragments/commands/wiki/","title":"Wiki","text":"<p>\u200e</p>"},{"location":"fragments/commands/wiki/#wiki","title":"wiki","text":"<pre><code>watson wiki\n</code></pre> <p>Open the wiki website of the application.</p>"},{"location":"fragments/commands/workhours/","title":"Workhours","text":"<p>\u200e</p>"},{"location":"fragments/commands/workhours/#workhours","title":"workhours","text":"<pre><code>watson workhours [start|end|reset] [time]\n</code></pre> <p>Get or set custom work hours for the current day. If <code>reset</code> is passed, the work hours are reset to the default values.</p>"},{"location":"fragments/commands/workhours/#examples","title":"Examples","text":"<pre><code>watson workhours start 9:15\nwatson workhours end 17:15\nwatson workhours reset\n</code></pre>"},{"location":"fragments/faq/24h-time/","title":"24h time","text":"<p>\u200e</p>"},{"location":"fragments/faq/24h-time/#is-the-application-using-12h-or-24h-time","title":"Is the application using 12h or 24h time?","text":"<p>The application uses 24h time. It's much easier to work with and remove the ambiguity of 12h time.</p>"},{"location":"fragments/faq/enable-completion/","title":"Enable completion","text":"<p>\u200e</p>"},{"location":"fragments/faq/enable-completion/#how-can-i-enable-completion","title":"How can I enable completion?","text":"<p>The application supports completion for the following terminals :</p> <p>powershell</p> <pre><code>Set-ExecutionPolicy Bypass -Scope Process -Force; $script = irm \"https://raw.githubusercontent.com/nomis51/watson/master/completion/powershell.ps1\"; iex $script; $script | Out-File -Append $PROFILE\n</code></pre> <p>bash</p> <pre><code>bash -c 'curl -sL \"https://raw.githubusercontent.com/nomis51/watson/master/completion/bash.sh\" | tee -a ~/.bashrc | bash'\n</code></pre> <p>zsh</p> <pre><code>zsh -c 'curl -sL \"https://raw.githubusercontent.com/nomis51/watson/master/completion/zsh.sh\" | tee -a ~/.zshrc | zsh'\n</code></pre>"},{"location":"fragments/faq/frame-start-end/","title":"Frame start end","text":"<p>\u200e</p>"},{"location":"fragments/faq/frame-start-end/#how-does-a-frame-start-time-and-end-time-work","title":"How does a frame start time and end time work?","text":"<p>A frame is actually simply a point in time. It only stores the time at which it was created. That means that the end time of a frame is technically the start time of \"next thing\" that comes after it. This design removes the tedious task of having to perfectly mix and match the start and end time of tasks.</p> <p>For example, you're working on something, then your boss calls you for something else at 9:13 for 2 minutes, then you go back on your project, but then a coworker calls you for something 4 minutes later. After all of that, you realized you forgot to add your tasks in the application. If you'd need to manage end times, that will probably look like this :</p> <ul> <li>Add a task \"call with the boss\" from 9:13 to 9:15</li> <li>Add a task \"work on project\" from 9:15 to 9:20</li> <li>Add a task \"call with the coworker\" from 9:20 to 9:24</li> <li>Add a task \"work on project\" from 9:24 to now</li> </ul> <p>Kind of tedious, isn't it?</p> <p>Now, what if you only need to remember the start time, it's much easier :</p> <ul> <li>Add a task \"call with the boss\" at 9:13</li> <li>Add a task \"work on project\" at 9:15</li> <li>Add a task \"call with the coworker\" at 9:20</li> <li>Add a task \"work on project\" at 9:24</li> </ul> <p>And all frames are gonna adjust automatically, no more \"when did it end? how long was the call? etc.\"!</p> <p>But, how does it knows when the day ends? Well, there are settings for that. You can set your work hours in the settings of the application. By default, it's set to <code>8:00</code> to <code>16:00</code>.</p>"},{"location":"fragments/faq/lunch-time/","title":"Lunch time","text":"<p>\u200e</p>"},{"location":"fragments/faq/lunch-time/#do-i-need-to-create-a-special-project-for-lunchtime","title":"Do I need to create a special project for lunchtime?","text":"<p>No, you can specify your lunch time in the settings of the application. By default, it's set to <code>12:00</code> to <code>13:00</code>.</p>"},{"location":"fragments/faq/time-input/","title":"Time input","text":"<p>\u200e</p>"},{"location":"fragments/faq/time-input/#how-does-time-input-works","title":"How does time input works?","text":"<p>There are several parsing rules available to speed up the time input process, so you don't have to type the date time. Of course, you can always type the full date time manually if you want to, but here are some shortcuts to save up some time.</p> <ul> <li>1-2 digits means <code>hour</code>. For example<ul> <li><code>3</code> means <code>03:00</code></li> <li><code>13</code> means <code>13:00</code></li> <li><code>88</code> means <code>08:08</code></li> </ul> </li> <li>3-4 digits means <code>hour:minute</code>. For example<ul> <li><code>1234</code> means <code>12:34</code></li> <li><code>845</code> means <code>08:45</code></li> <li><code>138</code> means <code>13:08</code></li> </ul> </li> <li>2 sets of digits means <code>day hour</code>. For example<ul> <li><code>13 14</code> means <code>13th</code> of the current month at <code>14:00</code></li> <li><code>3 1245</code> means <code>3rd</code> of the current month at <code>12:45</code></li> </ul> </li> <li>hyphen separated digits means <code>year-month-day</code>. For example<ul> <li><code>3-13</code> means <code>March 13th</code> of the current year</li> <li><code>10-23 852</code> means <code>October 23rd</code> of the current year at <code>08:52</code></li> <li><code>2023-4-13 14</code> means <code>April 13th</code> of <code>2023</code> at <code>14:00</code></li> </ul> </li> </ul>"},{"location":"fragments/faq/whats-frame/","title":"Whats frame","text":"<p>\u200e</p>"},{"location":"fragments/faq/whats-frame/#what-is-a-frame","title":"What is a frame?","text":"<p>It's a task or an activity. Basically what you're working on. Usually it's a simple name, like <code>cooking</code> or 'project-abc'. You can also add as many <code>tags</code> as you want to describe the <code>frame</code>.</p> <p>For example, if you're cooking a pizza, you could say <code>watson start cooking pizza</code>. The project is <code>cooking</code> the tag is <code>pizza</code>.</p> <p>Tags can help you find frames related to specific tasks within a project.</p>"},{"location":"fragments/faq/where-data-stored/","title":"Where data stored","text":"<p>\u200e</p>"},{"location":"fragments/faq/where-data-stored/#where-are-the-application-data-stored","title":"Where are the application data stored?","text":"<p>All the data of the application is stored in a folder called <code>.watson</code> in your home directory.</p> <ul> <li>On Windows, it's <code>C:\\Users\\&lt;username&gt;\\.watson</code></li> <li>On Linux and macOS, it's <code>~/.watson</code></li> <li>On macOS, it's <code>/Users/&lt;username&gt;/.watson</code></li> </ul> <p>The directory contains several elements :</p> <ul> <li>The <code>logs</code> directory contains the logs of the application</li> <li>The <code>settings.json</code> file contains the settings of the application (which you can also edit through the application)</li> <li>The database file <code>data.db</code> which contains the frames, projects, tags, etc.</li> </ul>"}]}